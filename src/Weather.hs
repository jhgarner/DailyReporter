{-# LANGUAGE OverloadedStrings #-}

module Weather
  ( weatherHTML
  ) where

import Data.Aeson
import Data.Aeson.Lens
import qualified Data.ByteString.Lazy as B
import Network.HTTP.Conduit (simpleHttp)
import Data.Text
import Data.Time.Clock.POSIX
import Data.Time.Format
import Data.Maybe
import Control.Lens

-- |The final html text generated by weather
weatherHTML :: IO String
weatherHTML = do
  weather <- response
  return . fromMaybe "Error getting weather" $ do
    String currently <- weather ^? key "currently" . key "summary"
    Number currentTemp <- weather ^? key "currently" . key "apparentTemperature"

    String summary <- weather ^? key "daily" . key "summary"
    dayData <- weather ^? key "daily" . key "data" . nth 0
    Number tempHigh <- dayData ^? key "temperatureHigh"
    Number tempHighTime <- dayData ^? key "temperatureHighTime"
    Number tempLow <- dayData ^? key "temperatureLow"
    Number tempLowTime <- dayData ^? key "temperatureLowTime"
    Number precipProb <- dayData ^? key "precipProbability"
    Number precipInt <- dayData ^? key "precipIntensity"
    Number precipIntMax <- dayData ^? key "precipIntensityMax"
    Number precipIntMaxTime <- dayData ^? key "precipIntensityMaxTime"
    String nowSummary <- dayData ^? key "summary"

    let tht = formatTime defaultTimeLocale "%H:%M" 
              $ posixSecondsToUTCTime (realToFrac tempHighTime)
    let tlt = formatTime defaultTimeLocale "%H:%M" 
              $ posixSecondsToUTCTime (realToFrac tempLowTime)
    let pimt = formatTime defaultTimeLocale "%H:%M" 
              $ posixSecondsToUTCTime (realToFrac precipIntMaxTime)

    Just $ "<meta charset=\"utf-8\"/><div align = \"center\">\n<h3>Weather Report:</h3>Summary: <b>"
      ++ unpack summary ++ "</b> <br>Max Apparent Temperature: <b>" ++ show tempHigh 
      ++ "</b> at " ++ tht ++ "<br>Min Apparent Temperature: <b>" ++ show tempLow 
      ++ "</b> at " ++ tlt ++ "<br>Precipitation Intensity: <b>" ++ show precipInt 
      ++ "</b> inches per hour. <br>Max Intensity: <b>" ++ show precipIntMax
      ++ "</b> at " ++ pimt ++ "<br>Probability of Precipitation: <b>" 
      ++ show precipProb ++ "</b> <br>Currently: <b>" ++ unpack currently 
      ++ "</b> <br>Current Temperature: <b>" ++ show currentTemp 
      ++ "</b><br><br>Rest of the week: " ++ unpack nowSummary ++ "</div>"

-- |Grabs the json from the url
response :: IO B.ByteString
response = simpleHttp request

-- |The url for the json
request :: String
request = "https://api.forecast.io/forecast/" ++ apiKey ++ path
  where path = "/" ++ fst location ++ "," ++ snd location

apiKey :: String
apiKey = "abb2504f8579fc04baf9708889b4c795"

location :: (String, String)
location = ("38.933771", "-104.850764")
