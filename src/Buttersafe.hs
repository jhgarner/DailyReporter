{-# LANGUAGE OverloadedStrings #-}

module Buttersafe
  ( butter
  ) where

import Data.Maybe

import Data.Text
import Data.Text.IO

import Text.HTML.Scalpel

import Utils

-- |The final html text generated by buttersafe website and rss feed.
-- |RSS feed handles the timing and the title, while the website handles the
-- |image and quote
butter :: IO Text
butter = do
  (title, _) <-
    getTitleAndSummary "http://feeds.feedburner.com/Buttersafe?format=xml"
  s <- butterComicScraper
  h <- htmlS
  let replacements = ("*title", title) : fromMaybe [] s
  return (template replacements h)

-- |Template for apod (templates/Buttersafe.html)
htmlS :: IO Text
htmlS = Data.Text.IO.readFile "templates/Buttersafe.html"

-- |Scrape site. See apod for similar version.
butterComicScraper :: IO (Maybe [(Text, Text)])
butterComicScraper = do
  response <- source
  return $ scrapeStringLike response scraper

-- |Get text from buttersafe.com
source :: IO Text
source = getHttp "http://buttersafe.com"

-- |Scraping logic for buttersafe.
scraper :: Scraper Text [(Text, Text)]
scraper = do
  img <- chroot ("div" @: ["id" @= "comic"]) $ attr "src" "img"
  quote <- chroot ("div" @: [hasClass "entry"]) $ innerHTML anySelector
  return $
    [("*img", img)
   , ("*quote", quote)]
